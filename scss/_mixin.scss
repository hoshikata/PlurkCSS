
// Alex式 字級大小自動處理
$baseSize: 14px;
$sizeLevel: 2px;
$paddingLevel: 1.2;
$baseLineSize: 10;
@function font($level) {
  @if ($level <0) {
    $level: 0;
  }
  // 基本字大小 * 字等級(取整數)
  @return $baseSize + $sizeLevel * round($level);
}
@function rhythm($lineLevel) {
  // 無條件進位(fontFun * 留空等級 / 基本倍數) * 基本倍數
  @return ceil($lineLevel * $paddingLevel / $baseLineSize) * $baseLineSize;
}
@mixin font($level: 1, $lineHeight: auto) {
  $size: font($level);
  $line: rhythm($size);

  font-size: $size;
  // 如果自己輸入的$lineHeight大於fontSize，則可以應用，否則用算出來的
  @if ($lineHeight == auto or $lineHeight < $line) {
    line-height: $line;
  } @else {
    line-height: $lineHeight;
  }
}

// 拿取顏色群組的方法
@function color($name, $theme: false, $group: $color) {
  @if $theme == false {
    @return map-get($group, $name);
  } @else if $theme != false {
    @return map-get(map-get($group, $theme), $name);
  }
}


// 可以判斷然後看要不要加上vw/vh
@mixin size($w, $h: $w) {
  @if ($w == auto or $h == auto) {
    width: $w;
    height: $h;
  } @else if (unit($w) == 'v' and $h == $w) {
    width: $w + w;
    height: $h + h;
  } @else if (unit($w) == 'vw' and $h == $w) {
    width: $w;
    height: ($h / 1vw) + vh;
  } @else if (unit($w) == 'vh' and $h == $w) {
    width: ($w / 1vh) + vw;
    height: $h;
  } @else {
    width: $w;
    height: $h;
  }
}

// Media
@mixin breakpoint($point) {
  @if ($point == sm) {
    @media only screen and (max-width: 540px) {
      @content;
    }
  }
  @if ($point == md) {
    @media only screen and (max-width: 770px) {
      @content;
    }
  }
  @if ($point == lg) {
    @media only screen and (max-width: 1050px) {
      @content;
    }
  }
}

// 三角形的作法
@mixin triangle($color, $angle: right, $w: 10px, $h: $w * 0.58) {
  width: 0;
  height: 0;
  @if ($angle == right) {
    border-top: $h solid transparent;
    border-bottom: $h solid transparent;
    border-left: $w solid $color;
  } @else if ($angle == left) {
    border-top: $h solid transparent;
    border-bottom: $h solid transparent;
    border-right: $w solid $color;
  } @else if ($angle == top) {
    border-right: $h solid transparent;
    border-left: $h solid transparent;
    border-bottom: $w solid $color;
  } @else if ($angle == bottom) {
    border-right: $h solid transparent;
    border-left: $h solid transparent;
    border-top: $w solid $color;
  }
}

//背景漸層
@mixin gradient($way, $direction, $color-stops...) {
  // 判斷是不是略過角度
  @if (type-of($direction) == 'color') {
    $color-stops: $direction, $color-stops;
    $direction: 180deg;
  }
  background-color: nth(nth($color-stops, 1), 1);
  // 判斷漸層的方式
  @if ($way == 'line') {
    background-image: linear-gradient($direction, $color-stops);
  } @else if ($way == 'circle') {
    background-image: radial-gradient($color-stops);
  } @else if ($way == 'line-r') {
    background-image: repeating-linear-gradient($direction, $color-stops);
  } @else if ($way == 'circle-r') {
    background-image: repeating-radial-gradient($color-stops);
  }
}
